//for permanent elements
@use '../abstract/' as *;

// banner images utils: test run
$food--banner: url('../../img/OF/Food_banner\ sm.jpg') ;

$banners:(
   
    "food":$food--banner
);
@each $key, $val in $banners{
    .banner--#{$key}{
        background-image: #{$val};
        @include mediaQuery{
            background-image: url('../../img/OF/Food_banner\ lm.jpg');
        }
    }
}
$width:("full":100%, "half":50%, "one-fourth":25%, "one-third":33.33333%);
@each $key, $val in $width{
    .w-#{$key}{
        width:#{$val};
    }
}


//color classes array
$colors:(
    "primary": $clr--primary,
    "accent": $clr--accent,
    "nuetral": $clr--nuetral,
    "dark": $clr-dark,
    "active": $clr--active,
    "Red": $clr--red
);
//color classes assigner ex: class="container bg-yellow"
@each $key, $val in $colors{
    .bg-#{$key}{
        background-color: #{$val};
    }
    .text-#{$key}{
        color: #{$val};
    }
}
//displayus (ex margin bottom) ex: class="container flex"
$displays: flex, grid ,block, inline;
@each $display in $displays{
    .#{$display}{
        display: #{$display};
    }
}
//number loops (ex margin bottom) class="container my-69 px-31"
@for $i from 1 through 100{
    .mb-#{$i}{
        margin-bottom:0 0 #{$i}rem 0;
    }
    .my-#{$i}{
        margin-bottom:#{$i}rem 0;
    }
    .mx-#{$i}{
        margin:0 #{$i}rem;
    }
    .p-#{$i}{
        padding: #{$i}rem;
        }
    .py-#{$i}{
    padding: #{$i}rem 0;
    }
    .px-#{$i}{
        padding:0 #{$i}rem;
    }

}
// alignment
$alignments: left, center, right, justify;
@each $alignment in $alignments{
    .text-#{$alignmebt}{
        text-align: #{$alignment}
    }
}